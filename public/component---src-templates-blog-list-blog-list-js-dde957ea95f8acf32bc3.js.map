{"version":3,"sources":["webpack:///./src/containers/blog/banner/index.js","webpack:///./src/components/shared/section-title/section-title.stc.js","webpack:///./src/components/shared/section-title/index.js","webpack:///./src/components/blog/layout-one/blog.stc.js","webpack:///./src/components/blog/layout-one/index.js","webpack:///./src/components/pagination/pagination.stc.js","webpack:///./src/components/pagination/index.js","webpack:///./src/templates/blog-list/blog-list.stc.js","webpack:///./src/templates/blog-list/blog-list.js","webpack:///./src/containers/blog/blog-heading/index.js","webpack:///./src/components/seo.js"],"names":["Banner","banner_img","useStaticQuery","pagedataJson","className","fluid","childImageSharp","alt","TitleWrapper","styled","div","SectionTitle","title","title2","subtitle","titleStyle","title2Style","subtitleStyle","defaultProps","fontSize","color","fontweight","responsive","xlarge","large","lineHeight","small","as","texttransform","letterspacing","display","mb","BlogWrapper","device","Thumb","Category","Content","ContentTop","ContentBottom","PostTitle","span","h2","medium","Excerpt","p","PostMeta","ul","Blog","categorie","date","path","id","author","image","excerpt","to","truncateString","PaginationWrap","PaginationList","PaginationItem","li","PaginationLink","Anchor","props","theme","colors","borderColor","bodyColor","active","css","primary","disabled","Pagination","currentPage","numberOfPages","rootPage","isFirst","isLast","previousPage","toString","nextPage","Array","from","length","_","i","key","SectionWrap","BlogInner","query","BlogList","blogs","data","allMarkdownRemark","edges","pageContext","map","blog","node","frontmatter","fields","slug","shortDesc","BlogHeading","blogSecData","SEO","description","pathname","type","render","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","lang","name","content","property","JSON","stringify","article"],"mappings":"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","file":"component---src-templates-blog-list-blog-list-js-dde957ea95f8acf32bc3.js","sourcesContent":["import React from 'react'\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from '../../../components/image'\n\nconst Banner = () => {\n    const BlogSecQueryData = useStaticQuery(graphql `\n        query BlogSecDataQuery {\n            pagedataJson(id: {eq: \"blog_page_data\"}) {\n                banner_img {\n                    childImageSharp {\n                        fluid(maxWidth: 1920, maxHeight: 600, quality: 100) {\n                            ...GatsbyImageSharpFluid_withWebp\n                            presentationWidth\n                            presentationHeight\n                        }\n                    }\n                }\n            }\n        }\n    `);\n    const {banner_img} = BlogSecQueryData.pagedataJson\n    return (\n        <div className=\"banner-area\">\n            <Image fluid={banner_img.childImageSharp.fluid} alt=\"Les services de crÃ©ation de site Web\"/>\n        </div>\n    )\n}\n\nexport default Banner\n","import styled from 'styled-components';\n \nexport const TitleWrapper = styled.div `\n    line-height: 1;\n`;\n\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Heading from '../heading'\nimport Text from '../text'\nimport {TitleWrapper} from './section-title.stc'\n\nconst SectionTitle = ({title, title2, subtitle, titleStyle, title2Style, subtitleStyle}) => {\n    return (\n        <TitleWrapper>\n            {subtitle && <Text {...subtitleStyle}>{subtitle}</Text>}\n            {title && <Heading {...titleStyle}>{title}</Heading>} {title2 && <Heading {...title2Style}>{title2}</Heading>}\n        </TitleWrapper>\n    )\n}\n\nSectionTitle.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    titleStyle: PropTypes.object,\n    subtitleStyle: PropTypes.object\n}\nSectionTitle.defaultProps = {\n    titleStyle: {\n        fontSize: '36px',\n        color: 'primary',\n        fontweight: 600,\n        responsive: {\n            xlarge: {\n                fontSize: '28px'\n            },\n            large: {\n                fontSize: '24px',\n                lineHeight: 'initial'\n            },\n            small: {\n                fontSize: '16px'\n            }\n        }\n    },\n    title2Style: {\n        fontSize: '30px',\n        color: '#ff005a',\n        fontweight: 600,\n        responsive: {\n            xlarge: {\n                fontSize: '28px'\n            },\n            large: {\n                fontSize: '24px',\n                lineHeight: 'initial'\n            },\n            small: {\n                fontSize: '16px'\n            }\n        }\n    },\n    subtitleStyle: {\n        as: 'span',\n        color: '#000',\n        fontweight: 500,\n        fontSize: '16px',\n        texttransform: 'uppercase',\n        letterspacing: '1px',\n        display: 'inline-block',\n        mb: '17px',\n        lineHeight: 1,\n        responsive: {\n            xlarge: {\n                fontSize: '14px',\n                mb: '25px'\n            },\n            large: {\n                fontSize: '12px',\n                mb: '10px'\n            }\n        }\n    }\n};\n\nexport default SectionTitle\n","import styled from 'styled-components';\nimport {device} from '../../../theme'\n\nexport const BlogWrapper = styled.div `\n    display: flex;\n    margin-bottom: 50px;\n    position: relative;\n    z-index: 2;\n    @media ${device.xlarge}{\n        flex-direction: column;\n    }\n`;\n\nexport const Thumb = styled.div `\n    flex-basis: 50%;\n    position: relative;\n    @media ${device.xlarge}{\n        flex-basis: 100%;\n    }\n    a{\n        display: block;\n    }\n    *{\n        height: 100%;\n    }\n    .gatsby-image-wrapper,\n    picture,\n    img{\n        width: 100%;\n        max-width: 100% !important;\n    }\n    img{\n        border-radius: 5px 5px 0 0;\n    }\n`;\n\nexport const Category = styled.div `\n    position: absolute !important;\n    top: 30px;\n    left: 30px;\n    a{\n        border: 2px solid #808585;\n        display: block;\n        height: 24px;\n        padding: 0 15px;\n        line-height: 20px;\n        color: #ffffff;\n        font-size: 12px;\n        text-transform: uppercase;\n        font-weight: 700;\n        border-radius: 11px;\n        letter-spacing: 1px;\n    }\n`;\n\nexport const Content = styled.div `\n    flex-basis: 65%;\n    padding: 40px 40px;\n    background: #fff;\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    justify-content: space-between;\n    @media ${device.xlarge}{\n        flex-basis: 100%;\n    }\n    @media ${device.small}{\n        flex-basis: 100%;\n        padding: 10vw;\n    }\n`;\n\nexport const ContentTop = styled.div ``;\nexport const ContentBottom = styled.div ``;\n\nexport const PostDate = styled.span `\n    color: #000000;\n    font-weight: 300;\n    font-size: 12px;\n    letter-spacing: 1px;\n    display: inline-block;\n    margin-bottom: 6px;\n`;\n\nexport const PostTitle = styled.h2 `\n    font-size: 30px;\n    font-weight: 600;\n    margin-bottom: 12px;\n    @media ${device.medium}{\n        font-size: 25px;\n    }\n    @media ${device.small}{\n        font-size: 16px;\n    }\n    a{\n        color: #000;\n    }\n`;\n\nexport const Excerpt = styled.p `\n    color: #000000;\n    font-size: 14px;\n    line-height: 24px;\n    @media ${device.small}{\n        font-size: 12px;\n    }\n`;\n\nexport const PostMeta = styled.ul `\n    display: flex;\n    padding: 0;\n    list-style: none;\n    margin-top: 34px;\n    margin-bottom: 0;\n    @media ${device.small}{\n        margin-top: 20px;\n    }\n    li{\n        margin: 0 15px;\n        @media ${device.medium}{\n            margin: 0 10px;\n        }\n        &:first-child {\n            margin-left: 0;\n        }\n        &:last-child {\n            margin-right: 0;\n        }\n        i{\n            padding-right: 7px;\n        }\n        a{\n            color: #000;\n        }\n    }\n`;\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport {Link} from 'gatsby'\nimport Image from '../../image';\nimport {truncateString} from '../../../utils/utilFunctions'\nimport {\n    BlogWrapper, \n    Thumb, \n    Category, \n    Content, \n    ContentTop, \n    ContentBottom, \n    PostTitle,\n    Excerpt,\n    PostMeta\n} from './blog.stc'\n\nconst Blog = ({title, date, categorie, id, author, path, image, excerpt}) => {\n    \n    return (\n        <BlogWrapper>\n            {image && (\n                <Thumb>\n                    <Link to={path}>\n                        <Image fluid={image} alt={title}/>\n                    </Link>\n                    <Category>\n                        <Link to={path}>{categorie}</Link>\n                    </Category>\n                </Thumb>\n            )}\n            <Content>\n                <ContentTop>\n                    <PostTitle><Link to={path}>{truncateString(title, 30)}</Link></PostTitle>\n                    <Excerpt>{excerpt}</Excerpt>\n                </ContentTop>\n                <ContentBottom>\n                    <PostMeta>\n                        <li><i className=\"ti-comment\"></i> <Link to={path}>{categorie}</Link></li>\n                        <li><i className=\"ti-desktop\"></i> <i className=\"ti-tablet\"></i> <i className=\"ti-mobile\"></i></li>\n                    </PostMeta>\n                </ContentBottom>\n            </Content>\n        </BlogWrapper>\n    )\n} \n\nexport default Blog;","import styled, {css} from 'styled-components';\r\nimport Anchor from '../shared/link'\r\nimport {device} from '../../theme'\r\n\r\nexport const PaginationWrap = styled.div `\r\n    position: relative;\r\n    z-index: 2;\r\n    background: #f8f8f8;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-bottom: 80px;\r\n    @media ${device.medium}{\r\n        padding-bottom: 23px;\r\n    }\r\n    @media ${device.small}{\r\n        padding-bottom: 23px;\r\n    }\r\n`;\r\n\r\nexport const PaginationList = styled.ul `\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n`;\r\n\r\nexport const PaginationItem = styled.li `\r\n    display: inline-block;\r\n    &:not(:last-child){\r\n        margin-right: 8px;\r\n    }\r\n`;\r\n\r\nexport const PaginationLink = styled(Anchor) `\r\n    display: block;\r\n    padding: 5px;\r\n    min-width: 45px;\r\n    border-radius: 5px;\r\n    border: 1px solid ${props => props.theme.colors.borderColor};\r\n    color: ${props => props.theme.colors.bodyColor};\r\n    text-align: center;\r\n    font-size: 16px;\r\n    ${props => props.active === 'true' && css `\r\n        background: ${props => props.theme.colors.primary};\r\n        color: #fff;\r\n        border-color: ${props => props.theme.colors.primary};  \r\n        &:visited,\r\n        &:hover,\r\n        &:active,\r\n        &:focus{\r\n            color: #fff;\r\n        }\r\n    `}\r\n    ${props => props.disabled && css `\r\n        color: #ccc;\r\n        cursor: not-allowed;\r\n    `}\r\n    &.prev,\r\n    &.next{\r\n        padding: 5px 20px;\r\n    }\r\n`;","import React from 'react';\r\nimport {PaginationWrap, PaginationList, PaginationItem, PaginationLink} from './pagination.stc'\r\n\r\nconst Pagination = ({currentPage, numberOfPages, rootPage}) => {\r\n    const isFirst = currentPage === 1;\r\n    const isLast = currentPage === numberOfPages;\r\n    const previousPage = currentPage - 1 === 1 ? rootPage : '/blog/page/' + (currentPage - 1).toString();\r\n    const nextPage = '/blog/page/' + (currentPage + 1).toString(); \r\n    return (\r\n        <PaginationWrap>\r\n            <PaginationList>\r\n                {isFirst ? (\r\n                    <PaginationItem>\r\n                        <PaginationLink className=\"prev\" disabled={true} path={previousPage}>Prev</PaginationLink>\r\n                    </PaginationItem>\r\n                ) : (\r\n                    <PaginationItem>\r\n                        <PaginationLink className=\"prev\" path={previousPage}>Prev</PaginationLink>\r\n                    </PaginationItem>\r\n                )}\r\n                {Array.from({length: numberOfPages}, (_, i) => currentPage === i + 1 ? (\r\n                    <PaginationItem key={`page-number-${i+1}`}>\r\n                        <PaginationLink active=\"true\" path={`/blog/${i === 0 ? '' : 'page/' + (i+1) }`}>\r\n                            {i+1}\r\n                        </PaginationLink>\r\n                    </PaginationItem>\r\n                ): (\r\n                    <PaginationItem key={`page-number-${i+1}`}>\r\n                        <PaginationLink path={`/blog/${i === 0 ? '' : 'page/' + (i+1) }`}>\r\n                            {i+1}\r\n                        </PaginationLink>\r\n                    </PaginationItem> \r\n                ))}\r\n                {isLast ? (\r\n                    <PaginationItem>\r\n                        <PaginationLink className=\"next\" disabled={true} path={nextPage}>Next</PaginationLink>\r\n                    </PaginationItem>\r\n                ): (\r\n                    <PaginationItem>\r\n                        <PaginationLink className=\"next\" path={nextPage}>Next</PaginationLink>\r\n                    </PaginationItem>\r\n                )}\r\n            </PaginationList>\r\n        </PaginationWrap>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import styled from 'styled-components';\r\nimport {device} from '../../theme'\r\n\r\nexport const SectionWrap = styled.div `\r\n    padding-top: 130px;\r\n    background: #f8f8f8;\r\n    @media ${device.medium}{\r\n        padding-top: 70px;\r\n    }\r\n    @media ${device.small}{\r\n        padding-top: 60px;\r\n    }\r\n`;\r\n\r\nexport const BlogInner = styled.div `\r\n    margin-top: 48px;\r\n    .blog-wrap{\r\n        margin-top: 50px;\r\n        @media ${device.small}{\r\n            margin-top: 35px;\r\n        }\r\n    }\r\n    .col-2:nth-child(odd) {\r\n        padding-right: 30px;\r\n        @media ${device.small}{\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .col-2:nth-child(even) {\r\n        padding-left: 30px;\r\n        @media ${device.small}{\r\n            padding-left: 0;\r\n        }\r\n    }\r\n`;","import React from 'react'\r\nimport {graphql} from 'gatsby'\r\nimport SEO from '../../components/seo';\r\nimport Layout from '../../containers/layout/layout'\r\nimport Banner from '../../containers/blog/banner'\r\nimport BlogHeading from '../../containers/blog/blog-heading'\r\nimport Blog from '../../components/blog/layout-one'\r\nimport Pagination from '../../components/pagination'\r\nimport {SectionWrap, BlogInner} from './blog-list.stc'\r\n\r\nconst BlogList = (props) => {\r\n    const blogs = props.data.allMarkdownRemark.edges;\r\n    const {currentPage, numberOfPages} = props.pageContext;\r\n\r\n    return(\r\n        <Layout>\r\n            <SEO title={`Blog page - ${currentPage}`}/>\r\n            <Banner/>\r\n            <SectionWrap>\r\n                <BlogHeading/>\r\n                <BlogInner>\r\n                    <div className=\"col-4 offset-1\">\r\n                        <div className=\"row\">\r\n                            {blogs.map((blog, i) => (\r\n                                <div className=\"col-2 blog-wrap\" key={`blog-${i}`}>\r\n                                    <Blog\r\n                                        title={blog.node.frontmatter.title}\r\n                                        date={blog.node.frontmatter.date}\r\n                                        author={blog.node.frontmatter.author}\r\n                                        id={blog.node.frontmatter.id}\r\n                                        path={blog.node.fields.slug}\r\n                                        excerpt={blog.node.frontmatter.shortDesc}\r\n                                        image={blog.node.frontmatter.image.childImageSharp.fluid}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </BlogInner>\r\n            </SectionWrap>\r\n            <Pagination\r\n                rootPage=\"/blog\"\r\n                currentPage={currentPage}\r\n                numberOfPages={numberOfPages}\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const query = graphql `\r\n    query BlogListQuery($skip: Int!, $limit: Int!){\r\n        allMarkdownRemark(\r\n            sort: {fields: frontmatter___date, order: DESC}, \r\n            limit: $limit, \r\n            skip: $skip) {\r\n                edges {\r\n                    node {\r\n                        fields {\r\n                            slug\r\n                        }\r\n                        frontmatter {\r\n                            title\r\n                            date(formatString: \"MMM Do, YYYY\")\r\n                            author\r\n                            id\r\n                            shortDesc\r\n                            image {\r\n                                childImageSharp {\r\n                                    fluid(maxWidth: 600, maxHeight: 630, quality: 100) {\r\n                                        ...GatsbyImageSharpFluid\r\n                                        presentationWidth\r\n                                        presentationHeight\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport default BlogList;","import React from 'react';\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport SectionTitle from '../../../components/shared/section-title'\r\n\r\nconst BlogHeading = () => {\r\n    const blogQueryData = useStaticQuery(graphql `\r\n        query BlogHeadingQuery {\r\n            pagedataJson(id: {eq: \"blog_page_data\"}) {\r\n                title\r\n                subtitle\r\n            }\r\n        }\r\n    `);\r\n    const blogSecData = blogQueryData.pagedataJson;\r\n    return (\r\n        <div className=\"col-1 offset-1\">\r\n            <SectionTitle\r\n                subtitle={blogSecData.subtitle}\r\n                title={blogSecData.title}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogHeading;","import React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nconst SEO = ({ title, description, image, pathname, type }) => (\r\n  <StaticQuery\r\n    query={query}\r\n    render={({\r\n      site: {\r\n        siteMetadata: {\r\n          defaultTitle,\r\n          titleTemplate,\r\n          defaultDescription,\r\n          siteUrl,\r\n          defaultImage,\r\n          twitterUsername,\r\n          type\r\n        },\r\n      },\r\n\r\n    }) => {\r\n      const seo = {\r\n        title: title || defaultTitle,\r\n        description: description || defaultDescription,\r\n        image: `${siteUrl}${image || defaultImage}`,\r\n        url: `${siteUrl}${pathname || \"/\"}`,\r\n\r\n      }\r\n\r\n    \r\n         var schemaProduct = {\r\n        \"@context\": \"https://schema.org/\",\r\n \"@type\": \"Product\",\r\n \"name\": \"crÃ©ation site internet vitrine\",\r\n \"image\": \"https://www.opurecreation.com/icons/icon-152x152.png\",\r\n \"description\": \"Ce module vous permettra de promouvoir votre activitÃ© sur internet de maniÃ¨re simple et efficace. Les diffÃ©rentes catÃ©gories vous permettent de prÃ©senter une entreprise dans sa globalitÃ© ou de rentrer dans les dÃ©tails dâun produit, dâun service, ou dâune activitÃ© plus prÃ©cise.\",\r\n \"brand\": {\r\n     \"@type\": \"Brand\",\r\n      \"name\": \"O Pure crÃ©ation\"\r\n      },\r\n \"sku\": \"siteInternetVitrine\",\r\n \"mpn\": \"SITE-1\",\r\n \"offers\": {\r\n     \"@type\": \"Offer\",\r\n     \"url\": \"https://www.opurecreation.com/site-internet-vitrine-plus\",\r\n     \"price\": \"00\",\r\n      \"priceValidUntil\": \"2020-11-20\",\r\n    \"priceCurrency\": \"EUROS\",\r\n    \"availability\": \"http://schema.org/InStock\"\r\n    },\r\n     \"review\": {\r\n        \"@type\": \"Review\",\r\n        \"reviewRating\": {\r\n          \"@type\": \"Rating\",\r\n          \"ratingValue\": \"4\",\r\n          \"bestRating\": \"5\"\r\n        },\r\n         \"author\": {\r\n          \"@type\": \"Person\",\r\n          \"name\": \"Pierre Vigouroux\"\r\n        }\r\n        },\r\n        \"aggregateRating\": {\r\n        \"@type\": \"AggregateRating\",\r\n        \"ratingValue\": \"4.4\",\r\n        \"reviewCount\": \"89\"\r\n      }\r\n        }\r\n\r\n\r\n\r\n      return (\r\n        <>\r\n          <Helmet title={seo.title} titleTemplate={`%s | ${titleTemplate}`}>\r\n            <html lang=\"fr\" />\r\n            <meta name=\"description\" content={seo.description} />\r\n            <meta name=\"image\" content={seo.image} />\r\n            <meta property=\"og:type\" content=\"website\" />\r\n            <meta property=\"og:image:width\" content=\"400\" />\r\n            <meta property=\"og:image:height\" content=\"300\" />\r\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\r\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\r\n            {seo.description && (\r\n              <meta property=\"og:description\" content={seo.description} />\r\n            )}\r\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            {twitterUsername && (\r\n              <meta name=\"twitter:creator\" content={twitterUsername} />\r\n            )}\r\n            {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\r\n            {seo.description && (\r\n              <meta name=\"twitter:description\" content={seo.description} />\r\n            )}\r\n            {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\r\n            {<script type=\"application/ld+json\">\r\n              {JSON.stringify(schemaProduct)}\r\n              </script>}\r\n\r\n          </Helmet>\r\n        </>\r\n      )\r\n    }}\r\n  />\r\n)\r\nexport default SEO\r\nSEO.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  image: PropTypes.string,\r\n  pathname: PropTypes.string,\r\n  article: PropTypes.bool,\r\n}\r\nSEO.defaultProps = {\r\n  title: null,\r\n  description: null,\r\n  image: null,\r\n  pathname: null,\r\n  article: false,\r\n}\r\nconst query = graphql`\r\n  query SEO {\r\n    site {\r\n      siteMetadata {\r\n        defaultTitle: title\r\n        titleTemplate\r\n        defaultDescription: description\r\n        siteUrl: siteUrl\r\n        defaultImage: image\r\n        twitterUsername\r\n        type\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}